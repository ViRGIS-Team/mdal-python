name: Build

on:
  pull_request:
    branches:
    - '*'
  release:
    types:
      - published

defaults:
  run:
    shell: bash -l -eo pipefail {0}

jobs:
  build:
    name: Build ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Check out mdal-python
      uses: actions/checkout@v3

    - name: Setup micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: .github/environment.yml
        extra-specs: |
          python=${{ matrix.python-version }}

    - name: Install mdal python
      run: |
        pip install . -vv


    - name: Build wheel distribution
      if: matrix.os != 'ubuntu-latest'
      run: python setup.py --skip-cmake bdist_wheel

    - name: Build source distribution
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: python setup.py sdist

    - name: Upload distribution(s)
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-py${{ matrix.python-version }}
        path: ./dist/*

  publish:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Move artifacts to dist
      run: |
        mkdir dist
        find ./artifacts -type f -exec mv {} ./dist \;
        tree ./dist

    - name: Publish package - release
      uses: pypa/gh-action-pypi-publish@release/v1
      if: github.event_name == 'release' && github.event.action == 'published'
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages_dir: ./dist
        verbose: true

    - name: Publish package - test
      uses: pypa/gh-action-pypi-publish@release/v1
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      with:
        user: __token__
        password: ${{ secrets.PYPI_TEST_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        packages_dir: ./dist
        verbose: true
